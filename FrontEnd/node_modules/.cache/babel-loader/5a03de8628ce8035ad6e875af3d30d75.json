{"ast":null,"code":"var _jsxFileName = \"/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/PinContainer.js\",\n    _s = $RefreshSig$();\n\nimport { getAllByAltText } from '@testing-library/dom';\nimport { Route, Switch } from 'react-router-dom';\nimport PinList from \"../components/pins/PinList\";\nimport PinDetail from \"../components/pins/PinDetail\";\nimport React, { useState, useEffect } from 'react';\nimport Request from '../helpers/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PinContainer = () => {\n  _s();\n\n  const [pins, setPins] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const getAllData = () => {\n    console.log(\"Loading...\"); // const request = new Request();\n    // const pinPromise = request.get(\"/pins\")\n\n    fetch(\"/pins\").then(res => res.json()).then(data => setPins(data)).then(() => setLoaded(true));\n  };\n\n  const findByCategoryType = categoryType => {\n    console.log(categoryType, pins);\n    return pins.find(pin => {\n      return pin.categoryType === categoryType;\n    });\n  };\n\n  const handleDelete = id => {\n    const request = new Request();\n    const url = \"/pins/\" + id;\n    request.delete(url).then(() => window.location = \"/pins\");\n  }; // const handlePost = (pin) => {\n  //     const request = new Request();\n  //     request.post(\"/pins\", pin)\n  //        .then(() => window.location = '/pins')\n  //   }\n  // const handleUpdate = (pin) => {\n  //     const request = new Request();\n  //     request.patch('/pins/' + pin.id, pin).then(() => {\n  //         window.location = '/pins/' + pin.id\n  //     })\n  //   }\n\n\n  if (!{\n    pins\n  }) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/pins/categoryType\",\n        render: props => {\n          const categoryType = props.match.params.categoryType;\n          const pin = findByCategoryType(categoryType);\n          return /*#__PURE__*/_jsxDEV(PinDetail, {\n            pin: pin,\n            onDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 16\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        render: () => {\n          return /*#__PURE__*/_jsxDEV(PinList, {\n            pins: pins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PinContainer, \"UXgTnuxhvJtSx2nx+7FsNI6lpzA=\");\n\n_c = PinContainer;\nexport default PinContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PinContainer\");","map":{"version":3,"sources":["/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/PinContainer.js"],"names":["getAllByAltText","Route","Switch","PinList","PinDetail","React","useState","useEffect","Request","PinContainer","pins","setPins","loaded","setLoaded","getAllData","console","log","fetch","then","res","json","data","findByCategoryType","categoryType","find","pin","handleDelete","id","request","url","delete","window","location","props","match","params"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,sBAAhC;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EADqB,CAErB;AACA;;AAEAC,IAAAA,KAAK,CAAC,OAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIV,OAAO,CAACU,IAAD,CAFrB,EAGCH,IAHD,CAGM,MAAML,SAAS,CAAC,IAAD,CAHrB;AAMH,GAXD;;AAaA,QAAMS,kBAAkB,GAAIC,YAAD,IAAkB;AACzCR,IAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ,EAA0Bb,IAA1B;AACA,WAAOA,IAAI,CAACc,IAAL,CAAWC,GAAD,IAAS;AACtB,aAAOA,GAAG,CAACF,YAAJ,KAAqBA,YAA5B;AACH,KAFM,CAAP;AAGD,GALH;;AAOA,QAAMG,YAAY,GAAIC,EAAD,IAAS;AAC1B,UAAMC,OAAO,GAAG,IAAIpB,OAAJ,EAAhB;AACE,UAAMqB,GAAG,GAAG,WAAWF,EAAvB;AACAC,IAAAA,OAAO,CAACE,MAAR,CAAeD,GAAf,EACGX,IADH,CACQ,MAAMa,MAAM,CAACC,QAAP,GAAkB,OADhC;AAED,GALL,CA7BuB,CAoCvB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAI,CAAC;AAACtB,IAAAA;AAAD,GAAL,EAAa;AACT,WAAO,IAAP;AACH;;AAED,sBAEI;AAAA,2BAEF,QAAC,MAAD;AAAA,8BAGA,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,oBAAlB;AAAuC,QAAA,MAAM,EAAGuB,KAAD,IAAU;AACvD,gBAAMV,YAAY,GAAGU,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBZ,YAAxC;AACA,gBAAME,GAAG,GAAGH,kBAAkB,CAACC,YAAD,CAA9B;AACA,8BAAO,QAAC,SAAD;AAAW,YAAA,GAAG,EAAEE,GAAhB;AACP,YAAA,QAAQ,EAAEC;AADH;AAAA;AAAA;AAAA;AAAA,kBAAP;AAID;AAPD;AAAA;AAAA;AAAA;AAAA,cAHA,eAYE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAE,MAAM;AACrB,8BAAO,QAAC,OAAD;AAAS,YAAA,IAAI,EAAEhB;AAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AAFC;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFE,mBAFJ;AA0BH,CA/ED;;GAAMD,Y;;KAAAA,Y;AAkFN,eAAeA,YAAf","sourcesContent":["import { getAllByAltText } from '@testing-library/dom';\nimport {Route, Switch} from 'react-router-dom';\nimport PinList from \"../components/pins/PinList\";\nimport PinDetail from \"../components/pins/PinDetail\";\nimport React, { useState, useEffect } from 'react';\nimport Request from '../helpers/request';\n\nconst PinContainer = () => {\n\n    const [pins, setPins] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        getAllData();\n    }, []);\n\n    const getAllData = () => {\n        console.log(\"Loading...\");\n        // const request = new Request();\n        // const pinPromise = request.get(\"/pins\")\n\n        fetch(\"/pins\")\n        .then(res => res.json())\n        .then(data => setPins(data))\n        .then(() => setLoaded(true))\n    \n    \n    }\n\n    const findByCategoryType = (categoryType) => {\n        console.log(categoryType, pins);\n        return pins.find((pin) => {\n            return pin.categoryType === categoryType;\n        });\n      }\n    \n    const handleDelete = (id) =>  {\n        const request = new Request();\n          const url = \"/pins/\" + id\n          request.delete(url)\n            .then(() => window.location = \"/pins\")\n        }\n    \n    // const handlePost = (pin) => {\n    //     const request = new Request();\n    //     request.post(\"/pins\", pin)\n    //        .then(() => window.location = '/pins')\n    //   }\n    \n    // const handleUpdate = (pin) => {\n    //     const request = new Request();\n    //     request.patch('/pins/' + pin.id, pin).then(() => {\n    //         window.location = '/pins/' + pin.id\n    //     })\n    //   }\n\n    if (!{pins}) {\n        return null\n    }\n\n    return (\n\n        <>\n      \n      <Switch>\n\n\n      <Route exact path=\"/pins/categoryType\" render={(props) =>{\n        const categoryType = props.match.params.categoryType;\n        const pin = findByCategoryType(categoryType);\n        return <PinDetail pin={pin}\n        onDelete={handleDelete}\n          \n        />\n      }}/>\n\n        <Route render={() => {\n        return <PinList pins={pins}/>\n      }} />\n\n      </Switch>\n     \n      </>\n      \n\n    )\n}\n\n\nexport default PinContainer;"]},"metadata":{},"sourceType":"module"}