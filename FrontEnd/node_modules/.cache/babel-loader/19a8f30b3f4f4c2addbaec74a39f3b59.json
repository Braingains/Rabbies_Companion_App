{"ast":null,"code":"var _jsxFileName = \"/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/MapContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\"; // import { formatRelative } from \"date-fns\";\n// import \"@reach/combobox/styles.css\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n}; //centers on Edinburgh by default\n\nconst center = {\n  lat: 55.9533,\n  lng: -3.1883\n};\nconst options = {\n  // styles:  \n  //custom map designs at snazzymaps - save in mapStyles.js\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst MapContainer = () => {\n  _s();\n\n  map.data.loadGeoJson('data.json');\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    libraries\n  });\n  const [markers, setMarkers] = React.useState([]);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options,\n    onClick: event => {\n      setMarkers(current => [...current, {\n        //spreads in the current markers and adds in the new one\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      }]);\n    },\n    children: markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      /* maps markers using the Marker import from the library, using time of click as key */\n      position: {\n        lat: marker.lat,\n        lng: marker.lng\n      } // icon={{ }}\n\n    }, marker.time.toISOString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapContainer, \"qDfa7bHWBewxRKCGh5N6p06sXA0=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/MapContainer.js"],"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","libraries","mapContainerStyle","width","height","center","lat","lng","options","disableDefaultUI","zoomControl","MapContainer","map","data","loadGeoJson","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_API_KEY","markers","setMarkers","useState","event","current","latLng","time","Date","marker","toISOString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,aAAnB,EAAkCC,MAAlC,EAA0CC,UAA1C,QAA4D,wBAA5D,C,CACA;AACA;;;AAEA,MAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;AACA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,OADiB;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAA1B,C,CAKA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,OADQ;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf;AAKA,MAAMC,OAAO,GAAG;AACd;AACA;AACAC,EAAAA,gBAAgB,EAAE,IAHJ;AAIdC,EAAAA,WAAW,EAAE;AAJC,CAAhB;;AAOA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvBC,EAAAA,GAAG,CAACC,IAAJ,CAASC,WAAT,CAAqB,WAArB;AACA,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAwBlB,aAAa,CAAC;AACxCmB,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADU;AAExCnB,IAAAA;AAFwC,GAAD,CAA3C;AAIE,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwB1B,KAAK,CAAC2B,QAAN,CAAe,EAAf,CAA9B;AAEA,MAAIP,SAAJ,EAAe,OAAO,oBAAP;AACf,MAAI,CAACD,QAAL,EAAe,OAAO,YAAP;AAGf,sBACE,QAAC,SAAD;AAEA,IAAA,iBAAiB,EAAEb,iBAFnB;AAGA,IAAA,IAAI,EAAE,CAHN;AAIA,IAAA,MAAM,EAAEG,MAJR;AAKA,IAAA,OAAO,EAAEG,OALT;AAMA,IAAA,OAAO,EAAGgB,KAAD,IAAW;AAEpBF,MAAAA,UAAU,CAACG,OAAO,IAAI,CAAC,GAAGA,OAAJ,EAAa;AACnC;AACAnB,QAAAA,GAAG,EAAEkB,KAAK,CAACE,MAAN,CAAapB,GAAb,EAF8B;AAGnCC,QAAAA,GAAG,EAAEiB,KAAK,CAACE,MAAN,CAAanB,GAAb,EAH8B;AAInCoB,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJ6B,OAAb,CAAZ,CAAV;AAOD,KAfC;AAAA,cAiBGP,OAAO,CAACT,GAAR,CAAaiB,MAAD,iBACb,QAAC,MAAD;AAEA;AACA,MAAA,QAAQ,EAAE;AAACvB,QAAAA,GAAG,EAAEuB,MAAM,CAACvB,GAAb;AAAkBC,QAAAA,GAAG,EAAEsB,MAAM,CAACtB;AAA9B,OAHV,CAIA;;AAJA,OACKsB,MAAM,CAACF,IAAP,CAAYG,WAAZ,EADL;AAAA;AAAA;AAAA;AAAA,YADC;AAjBH;AAAA;AAAA;AAAA;AAAA,UADF;AA4BL,CAxCD;;GAAMnB,Y;UAE4Bb,a;;;KAF5Ba,Y;AA0CN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport {GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\n// import { formatRelative } from \"date-fns\";\n// import \"@reach/combobox/styles.css\"\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh',\n};\n\n//centers on Edinburgh by default\nconst center = {\n  lat: 55.9533,\n  lng: -3.1883\n}\n\nconst options = {\n  // styles:  \n  //custom map designs at snazzymaps - save in mapStyles.js\n  disableDefaultUI: true,\n  zoomControl: true,\n} \n\nconst MapContainer = () => {\n    map.data.loadGeoJson('data.json')\n    const {isLoaded, loadError} = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_API_KEY,\n        libraries,\n      });\n      const [markers, setMarkers] = React.useState([]);\n    \n      if (loadError) return \"Error loading maps\"\n      if (!isLoaded) return \"Loading...\"\n\n      \n      return (\n        <GoogleMap \n        \n        mapContainerStyle={mapContainerStyle} \n        zoom={8} \n        center={center}\n        options={options}\n        onClick={(event) => {\n          \n        setMarkers(current => [...current, {\n        //spreads in the current markers and adds in the new one\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n        },\n      ]);\n      }}\n        >\n          {markers.map((marker) => (\n          <Marker \n          key={marker.time.toISOString()}\n          /* maps markers using the Marker import from the library, using time of click as key */\n          position={{lat: marker.lat, lng: marker.lng}} \n          // icon={{ }}\n          \n          />))}\n          </GoogleMap> \n      )\n}\n\nexport default MapContainer;"]},"metadata":{},"sourceType":"module"}