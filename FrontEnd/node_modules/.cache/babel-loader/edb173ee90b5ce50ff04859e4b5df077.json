{"ast":null,"code":"var _jsxFileName = \"/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/MapContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport PinDetail from \"../components/pins/PinDetail\"; // import { formatRelative } from \"date-fns\";\n// import \"@reach/combobox/styles.css\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n}; //centers on Edinburgh by default\n\nconst center = {\n  lat: 55.9533,\n  lng: -3.1883\n};\nconst options = {\n  // styles:  \n  //custom map designs at snazzymaps - save in mapStyles.js\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst MapContainer = () => {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    libraries\n  });\n  const [markers, setMarkers] = React.useState([]);\n  const [marker, setMarker] = useState(null);\n  const [detailedMarker, setDetailedMarker] = useState(null);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options,\n    onClick: event => {\n      setMarkers(current => [...current, {\n        //spreads in the current markers and adds in the new one\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      }]);\n      {\n        marker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: detailedMarker.lat,\n            lng: detailedMarker.lng\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"pin form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this);\n      }\n      ;\n    },\n    children: [markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      /* maps markers using the Marker import from the library, using time of click as key */\n      position: {\n        lat: marker.lat,\n        lng: marker.lng\n      },\n      onClick: () => {\n        setDetailedMarker(marker);\n      } // icon={{ }}\n\n    }, marker.time.toISOString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)), detailedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: detailedMarker.lat,\n        lng: detailedMarker.lng\n      },\n      onCloseClick: () => {\n        setDetailedMarker(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PinDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapContainer, \"PTkd9wXimgdHTWuJ+OSUw3S4E4s=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/MapContainer.js"],"names":["React","useState","GoogleMap","useLoadScript","Marker","InfoWindow","PinDetail","libraries","mapContainerStyle","width","height","center","lat","lng","options","disableDefaultUI","zoomControl","MapContainer","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_API_KEY","markers","setMarkers","marker","setMarker","detailedMarker","setDetailedMarker","event","current","latLng","time","Date","map","toISOString"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport PinDetail from \"../components/pins/PinDetail\";\n// import { formatRelative } from \"date-fns\";\n// import \"@reach/combobox/styles.css\"\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh',\n};\n\n//centers on Edinburgh by default\nconst center = {\n  lat: 55.9533,\n  lng: -3.1883\n}\n\nconst options = {\n  // styles:  \n  //custom map designs at snazzymaps - save in mapStyles.js\n  disableDefaultUI: true,\n  zoomControl: true,\n} \n\nconst MapContainer = () => {\n    const {isLoaded, loadError} = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_API_KEY,\n        libraries,\n      });\n      const [markers, setMarkers] = React.useState([]);\n      const [marker, setMarker] = useState(null);\n      const [detailedMarker, setDetailedMarker] = useState(null);\n    \n      if (loadError) return \"Error loading maps\"\n      if (!isLoaded) return \"Loading...\"\n\n      \n      return (\n        <GoogleMap \n        mapContainerStyle={mapContainerStyle} \n        zoom={8} \n        center={center}\n        options={options}\n        onClick={(event) => {\n          \n        setMarkers(current => [...current, {\n        //spreads in the current markers and adds in the new one\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n        },\n      ]);\n      {marker && (\n        <InfoWindow position={{lat: detailedMarker.lat, lng: detailedMarker.lng}}>\n        <div>pin form</div>\n        </InfoWindow>\n      )};\n      }}\n        >\n          {markers.map((marker) => (\n          <Marker \n          key={marker.time.toISOString()}\n          /* maps markers using the Marker import from the library, using time of click as key */\n          position={{lat: marker.lat, lng: marker.lng}} \n          onClick={() => {\n            setDetailedMarker(marker);\n          }}\n          // icon={{ }}\n          \n          />))}\n\n          {detailedMarker && (\n            <InfoWindow position={{lat: detailedMarker.lat, lng: detailedMarker.lng}}\n            onCloseClick={() => {\n              setDetailedMarker(null);\n            }}\n            >\n              <div><PinDetail /></div>\n            </InfoWindow>\n          )}\n          </GoogleMap> \n      )\n}\n\nexport default MapContainer;"]},"metadata":{},"sourceType":"module"}