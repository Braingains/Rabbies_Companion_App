{"ast":null,"code":"var _jsxFileName = \"/Users/ewanbrain/codeclan_work/final_project/FrontEnd/tourcompanion/src/containers/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { Icon, L } from \"leaflet\";\nimport Request from \"../helpers/request\";\nimport MarkerForm from \"../components/MarkerForm\";\nimport MarkerDetail from \"../components/MarkerDetail\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst photoIcon = new Icon({\n  iconUrl: '/camera.svg',\n  iconSize: [30, 30]\n});\nconst toiletIcon = new Icon({\n  iconUrl: '/toilet.svg',\n  iconSize: [30, 30]\n});\nconst attractionIcon = new Icon({\n  iconUrl: '/attraction.svg',\n  iconSize: [30, 30]\n});\n\nfunction onMapClick(e) {\n  Popup.setLatLng(e.latlng).setContent(\"You clicked the map at \" + e.latlng.toString()).openOn(MapContainer);\n}\n\nfunction Map() {\n  _s();\n\n  const [pins, setPins] = useState([]);\n  const [state, setState] = useState(null);\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const getAllData = () => {\n    console.log(\"get all data\");\n    const request = new Request();\n    request.get('/api/pins').then(data => {\n      setPins(data);\n    });\n  };\n\n  const getPinByID = id => {\n    return pins.find(pin => {\n      return pin.id === parseInt(id);\n    });\n  };\n\n  const getMarkerByCategory = category => {\n    return pins.find(pin => {\n      return pin.category === category;\n    });\n  };\n\n  const handleDelete = id => {\n    const request = new Request();\n    const url = \"/api/pins/\" + id;\n    request.delete(url).then(() => window.location = \"/pins\");\n  };\n\n  const handlePost = pin => {\n    const request = new Request();\n    request.post(\"/api/pins\", pin).then(() => window.location = '/pins');\n  };\n\n  const handleUpdate = pin => {\n    const request = new Request();\n    request.patch('/api/pins/' + pin.id, pin).then(() => {\n      window.location = '/pins/' + pin.id;\n    });\n  }; //   ('click', () => {\n  //     map.setCenter([50.5, 30.5])\n  //   })\n  //   return null\n  // }\n  //   const map = useMapEvent('click', function(e) {        \n  //     var popLocation= e.latlng;\n  //     var popup = L.popup()\n  //     .setLatLng(popLocation)\n  //     .setContent('<p>Hello world!<br />This is a nice popup.</p>')\n  //     .openOn(map);        \n  // });\n  // function AddMarkerToClick() {\n  //   const [markers, setMarkers] = useState([]);\n  //   const map = useMapEvents({\n  //     click(e) {\n  //       const newMarker = e.latlng\n  //       setMarkers([...markers, newMarker]);\n  //     },\n  //   })\n\n\n  const createMarker = () => {\n    console.log(\"cunt\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/pins/new\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(MarkerForm, {\n              onCreate: handlePost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/pins/category/edit\",\n          render: props => {\n            const category = props.match.params.category;\n            const pin = getMarkerByCategory(category);\n            return /*#__PURE__*/_jsxDEV(MarkerForm, {\n              pin: pin,\n              onUpdate: handleUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 14\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/pins/category\",\n          render: props => {\n            const category = props.match.params.category;\n            const pin = getMarkerByCategory(category);\n            return /*#__PURE__*/_jsxDEV(MarkerDetail, {\n              pin: pin,\n              onDelete: handleDelete,\n              onUpdate: handleUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 14\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [56.355233, -4.07513],\n        zoom: 8,\n        onclick: () => {\n          createMarker(Marker);\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 3\n        }, this), pins.map(pin => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [pin.lat, pin.lng],\n            icon: attractionIcon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(MarkerDetail, {\n                pin: pin,\n                onDelete: handleDelete,\n                onUpdate: handleUpdate,\n                onclick: onMapClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }, this)\n          }, pin.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 16\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"2uAFfZzxup9h6PMYLUNHS5ynNKU=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/ewanbrain/codeclan_work/final_project/FrontEnd/tourcompanion/src/containers/Map.js"],"names":["React","useState","useEffect","MapContainer","Marker","Popup","TileLayer","Icon","L","Request","MarkerForm","MarkerDetail","BrowserRouter","Router","Route","Switch","photoIcon","iconUrl","iconSize","toiletIcon","attractionIcon","onMapClick","e","setLatLng","latlng","setContent","toString","openOn","Map","pins","setPins","state","setState","getAllData","console","log","request","get","then","data","getPinByID","id","find","pin","parseInt","getMarkerByCategory","category","handleDelete","url","delete","window","location","handlePost","post","handleUpdate","patch","createMarker","props","match","params","map","lat","lng"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { Icon, L } from \"leaflet\";\nimport Request from \"../helpers/request\";\nimport MarkerForm from \"../components/MarkerForm\";\nimport MarkerDetail from \"../components/MarkerDetail\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst photoIcon = new Icon({\n  iconUrl: '/camera.svg',\n  iconSize: [30, 30]\n});\n\nconst toiletIcon = new Icon({\n  iconUrl: '/toilet.svg',\n  iconSize: [30, 30]\n});\n\nconst attractionIcon = new Icon({\n  iconUrl: '/attraction.svg',\n  iconSize: [30, 30]\n});\n\nfunction onMapClick(e) {\n    Popup\n        .setLatLng(e.latlng)\n        .setContent(\"You clicked the map at \" + e.latlng.toString())\n        .openOn(MapContainer);\n}\n\n\n\n\n\n\n\n\nfunction Map() {\n\n  const [pins, setPins] = useState([]);\n\n  const [state, setState] = useState(null);\n\n    useEffect(() => {\n        getAllData();\n    }, []);\n\n    const getAllData = () => {\n        \n      console.log(\"get all data\")\n\n        const request = new Request();\n        request.get('/api/pins')\n        .then((data) => {\n            setPins(data);\n        })\n    }\n\n    const getPinByID = (id) => {\n      return pins.find((pin) => {\n          return pin.id === parseInt(id);\n      });\n  }\n\n  const getMarkerByCategory = (category) => {\n    return pins.find((pin) => {\n      return pin.category === category;\n    });\n  }\n\n    const handleDelete = (id) =>  {\n      const request = new Request();\n        const url = \"/api/pins/\" + id\n        request.delete(url)\n          .then(() => window.location = \"/pins\")\n  }\n\n    const handlePost = (pin) => {\n        const request = new Request();\n        request.post(\"/api/pins\", pin)\n           .then(() => window.location = '/pins')\n      }\n\n    const handleUpdate = (pin) => {\n      const request = new Request();\n      request.patch('/api/pins/' + pin.id, pin).then(() => {\n          window.location = '/pins/' + pin.id\n      })\n    }\n\n    \n\n  //   ('click', () => {\n  //     map.setCenter([50.5, 30.5])\n  //   })\n  //   return null\n  // }\n\n//   const map = useMapEvent('click', function(e) {        \n//     var popLocation= e.latlng;\n//     var popup = L.popup()\n//     .setLatLng(popLocation)\n//     .setContent('<p>Hello world!<br />This is a nice popup.</p>')\n//     .openOn(map);        \n// });\n\n// function AddMarkerToClick() {\n\n//   const [markers, setMarkers] = useState([]);\n\n//   const map = useMapEvents({\n//     click(e) {\n//       const newMarker = e.latlng\n//       setMarkers([...markers, newMarker]);\n//     },\n//   })\n\n    const createMarker = () => {\n        console.log(\"cunt\");\n\n    }\n\n\n  return (\n    <Router>\n    <>\n    <Switch>\n      <Route exact path = \"/pins/new\" render={() =>\n      {return <MarkerForm onCreate={handlePost}/>\n      }}/>\n\n      {/* <Route exact path=\"/pins/:id/edit\" render={(props) =>{\n      const id = props.match.params.id;\n      const pin = getPinByID(id);\n      return <MarkerForm pin={pin}\n      onUpdate={handleUpdate}\n      />\n      }}/> */}\n\n      <Route exact path=\"/pins/category/edit\" render={(props) =>{\n      const category = props.match.params.category;\n      const pin = getMarkerByCategory(category);\n      return <MarkerForm pin={pin}\n      onUpdate={handleUpdate}\n      />\n      }}/>\n\n      {/* <Route exact path=\"/pins/:id\" render={(props) => {\n      const id = props.match.params.id;\n      const pin = getPinByID(id);\n      return <MarkerDetail pin={pin}\n      onDelete={handleDelete}\n      onUpdate={handleUpdate} \n      />\n      }} /> */}\n\n      <Route exact path=\"/pins/category\" render={(props) => {\n      const category = props.match.params.category;\n      const pin = getMarkerByCategory(category);\n      return <MarkerDetail pin={pin}\n      onDelete={handleDelete}\n      onUpdate={handleUpdate} \n      />\n      }} />\n\n    </Switch>\n\n  <MapContainer \n  center={[56.355233, -4.07513]} \n  zoom={8}\n      onclick={() => {\n        createMarker(Marker)\n      }}\n\n  >\n\n  <TileLayer\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    \n  />\n\n\n  {pins.map((pin) => {\n        return <Marker key={pin.id} position={\n               [pin.lat, pin.lng]\n          }\n          icon={attractionIcon}\n          >\n            <Popup>\n              <MarkerDetail pin={pin}\n              onDelete={handleDelete}\n              onUpdate={handleUpdate}\n              onclick={onMapClick} \n              />\n            </Popup>\n          </Marker>\n        })}\n    </MapContainer >\n    </>\n    </Router>\n  )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}