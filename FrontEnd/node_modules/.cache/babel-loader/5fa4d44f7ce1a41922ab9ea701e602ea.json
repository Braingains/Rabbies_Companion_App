{"ast":null,"code":"var _jsxFileName = \"/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/MapContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, useLoadScript, InfoWindow } from \"@react-google-maps/api\";\nimport LocationMarker from \"../components/LocationMarker\";\nimport Request from '../helpers/request';\nimport Pin from \"../components/pins/Pin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n}; //centers on Edinburgh by default\n\nconst center = {\n  lat: 55.9533,\n  lng: -3.1883\n}; // const initialPins = \n\nconst options = {\n  // styles:  \n  //custom map designs at snazzymaps - save in mapStyles.js\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst MapContainer = ({\n  pins\n}) => {\n  _s();\n\n  //   const markers = pins.map((pin, index) => {\n  //     return (\n  //         <li key={index} className=\"component-item\">\n  //         <div className=\"component\">\n  //         <Pin pin={pin} />\n  //         </div>    \n  //         </li>\n  //     )\n  // })\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY\n  }); // const [markers, setMarkers] = React.useState([]);\n  // const [loading, setLoading] = useState([]);\n\n  const [eventData, setEventData] = useState([]);\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const getAllData = () => {\n    console.log(\"Loading...\");\n    const request = new Request();\n    request.get('/api/pins').then(data => {\n      setEventData(console.log(data));\n    });\n  };\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options //   onClick={(event) => {\n    //   setMarkers(current => [...current, {\n    //   spreads in the current markers and adds in the new one\n    //   lat: event.latLng.lat(),\n    //   lng: event.latLng.lng(),\n    //   time: new Date()\n    //   },\n    // ]);\n    // }}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapContainer, \"kYHzH3ZpMhdZ2elgQvky8W3OmbA=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/MapContainer.js"],"names":["React","useState","useEffect","GoogleMap","useLoadScript","InfoWindow","LocationMarker","Request","Pin","mapContainerStyle","width","height","center","lat","lng","options","disableDefaultUI","zoomControl","MapContainer","pins","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_API_KEY","eventData","setEventData","getAllData","console","log","request","get","then","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,EAAmBC,aAAnB,EAAkCC,UAAlC,QAAoD,wBAApD;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,OADiB;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAA1B,C,CAKA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,OADQ;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf,C,CAKA;;AAEA,MAAMC,OAAO,GAAG;AACd;AACA;AACAC,EAAAA,gBAAgB,EAAE,IAHJ;AAIdC,EAAAA,WAAW,EAAE;AAJC,CAAhB;;AAOA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAwBjB,aAAa,CAAC;AACxCkB,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADU,GAAD,CAA3C,CAb6B,CAgB3B;AAEA;;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,UAAU;AACb,GAFU,EAER,EAFQ,CAAT;;AAIF,QAAMA,UAAU,GAAG,MAAM;AAErBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,UAAMC,OAAO,GAAG,IAAIxB,OAAJ,EAAhB;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EACCC,IADD,CACOC,IAAD,IAAU;AACZP,MAAAA,YAAY,CAACE,OAAO,CAACC,GAAR,CAAYI,IAAZ,CAAD,CAAZ;AAEH,KAJD;AAMH,GAXD;;AAeE,MAAIb,SAAJ,EAAe,OAAO,oBAAP;AACf,MAAI,CAACD,QAAL,EAAe,OAAO,YAAP;AAEf,sBACE,QAAC,SAAD;AAEA,IAAA,iBAAiB,EAAEX,iBAFnB;AAGA,IAAA,IAAI,EAAE,CAHN;AAIA,IAAA,MAAM,EAAEG,MAJR;AAKA,IAAA,OAAO,EAAEG,OALT,CAMF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfE;AAAA;AAAA;AAAA;AAAA,UADF;AA4BL,CAxED;;GAAMG,Y;UAa4Bd,a;;;KAb5Bc,Y;AA0EN,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {GoogleMap, useLoadScript, InfoWindow } from \"@react-google-maps/api\";\nimport LocationMarker from \"../components/LocationMarker\"\nimport Request from '../helpers/request';\nimport Pin from \"../components/pins/Pin\"\n\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh',\n};\n\n//centers on Edinburgh by default\nconst center = {\n  lat: 55.9533,\n  lng: -3.1883\n}\n\n// const initialPins = \n\nconst options = {\n  // styles:  \n  //custom map designs at snazzymaps - save in mapStyles.js\n  disableDefaultUI: true,\n  zoomControl: true,\n} \n\nconst MapContainer = ({pins}) => {\n\n//   const markers = pins.map((pin, index) => {\n//     return (\n//         <li key={index} className=\"component-item\">\n//         <div className=\"component\">\n//         <Pin pin={pin} />\n//         </div>    \n//         </li>\n//     )\n// })\n\n\n    const {isLoaded, loadError} = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_API_KEY\n      });\n      // const [markers, setMarkers] = React.useState([]);\n    \n      // const [loading, setLoading] = useState([]);\n\n      const [eventData, setEventData] = useState([]);\n\n      useEffect(() => {\n        getAllData();\n    }, []);\n\n    const getAllData = () => {\n        \n        console.log(\"Loading...\");\n\n        const request = new Request();\n        request.get('/api/pins')\n        .then((data) => {\n            setEventData(console.log(data));\n\n        })\n\n    }\n\n\n\n      if (loadError) return \"Error loading maps\"\n      if (!isLoaded) return \"Loading...\"\n      \n      return (\n        <GoogleMap \n        \n        mapContainerStyle={mapContainerStyle} \n        zoom={8} \n        center={center}\n        options={options}\n      //   onClick={(event) => {\n          \n      //   setMarkers(current => [...current, {\n      //   spreads in the current markers and adds in the new one\n      //   lat: event.latLng.lat(),\n      //   lng: event.latLng.lng(),\n      //   time: new Date()\n      //   },\n      // ]);\n      // }}\n        >\n          \n          {/* {markers.map((marker) => (\n          <Marker \n          key={marker.time.toISOString()}\n          maps markers using the Marker import from the library, using time of click as key\n          position={{lat: marker.lat, lng: marker.lng}} \n          \n          />))} */}\n          </GoogleMap> \n      )\n}\n\nexport default MapContainer;"]},"metadata":{},"sourceType":"module"}