{"ast":null,"code":"var _jsxFileName = \"/Users/ewanbrain/codeclan_work/final_project/FrontEnd/tourcompanion/src/containers/Map.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { Icon, L } from \"leaflet\";\nimport Request from \"../helpers/request\";\nimport MarkerForm from \"../components/MarkerForm\";\nimport MarkerDetail from \"../components/MarkerDetail\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst photoIcon = new Icon({\n  iconUrl: '/camera.svg',\n  iconSize: [30, 30]\n});\nconst toiletIcon = new Icon({\n  iconUrl: '/toilet.svg',\n  iconSize: [30, 30]\n});\nconst attractionIcon = new Icon({\n  iconUrl: '/attraction.svg',\n  iconSize: [30, 30]\n});\n\nfunction Map() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [pins, setPins] = useState([]); // const [state, setState] = useState(null);\n\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const getAllData = () => {\n    console.log(\"get all data\");\n    const request = new Request();\n    request.get('/api/pins').then(data => {\n      setPins(data);\n    });\n  };\n\n  const getPinByID = id => {\n    return pins.find(pin => {\n      return pin.id === parseInt(id);\n    });\n  };\n\n  const handleDelete = id => {\n    const request = new Request();\n    const url = \"/api/pins/\" + id;\n    request.delete(url).then(() => window.location = \"/pins\");\n  };\n\n  const handlePost = pin => {\n    const request = new Request();\n    request.post(\"/api/pins\", pin).then(() => window.location = '/pins');\n  };\n\n  const handleUpdate = pin => {\n    const request = new Request();\n    request.patch('/api/pins/' + pin.id, pin).then(() => {\n      window.location = '/pins/' + pin.id;\n    });\n  }; //   ('click', () => {\n  //     map.setCenter([50.5, 30.5])\n  //   })\n  //   return null\n  // }\n  //   const map = useMapEvent('click', function(e) {        \n  //     var popLocation= e.latlng;\n  //     var popup = L.popup()\n  //     .setLatLng(popLocation)\n  //     .setContent('<p>Hello world!<br />This is a nice popup.</p>')\n  //     .openOn(map);        \n  // });\n\n\n  function AddMarkerToClick() {\n    _s();\n\n    const [markers, setMarkers] = useState([]);\n    const map = useMapEvents({\n      click(e) {\n        const newMarker = e.latlng;\n        setMarkers([...markers, newMarker]);\n      }\n\n    });\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/pins/new\",\n            render: () => {\n              return /*#__PURE__*/_jsxDEV(MarkerForm, {\n                onCreate: handlePost\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 15\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/pins/:id/edit\",\n            render: props => {\n              const id = props.match.params.id;\n              const pin = getPinByID(id);\n              return /*#__PURE__*/_jsxDEV(MarkerForm, {\n                pin: pin,\n                onUpdate: handleUpdate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 14\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/pins/:id\",\n            render: props => {\n              const id = props.match.params.id;\n              const pin = getPinByID(id);\n              return /*#__PURE__*/_jsxDEV(MarkerDetail, {\n                pin: pin,\n                onDelete: handleDelete,\n                onUpdate: handleUpdate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 14\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [56.355233, -4.07513],\n          zoom: 8,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 3\n          }, this), pins.map(pin => {\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: [pin.lat, pin.lng],\n              icon: photoIcon,\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(MarkerDetail, {\n                  pin: pin,\n                  onDelete: handleDelete,\n                  onUpdate: handleUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 13\n              }, this)\n            }, pin.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 18\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this);\n  }\n\n  _s(AddMarkerToClick, \"/NzGjcC7ErruL9k6uR3LrPd8ohU=\", true);\n}\n\n_s2(Map, \"lXbYceN8aKfWLs4tYW+R7vq54Lc=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/ewanbrain/codeclan_work/final_project/FrontEnd/tourcompanion/src/containers/Map.js"],"names":["React","useState","useEffect","MapContainer","Marker","Popup","TileLayer","Icon","L","Request","MarkerForm","MarkerDetail","BrowserRouter","Router","Route","Switch","photoIcon","iconUrl","iconSize","toiletIcon","attractionIcon","Map","pins","setPins","getAllData","console","log","request","get","then","data","getPinByID","id","find","pin","parseInt","handleDelete","url","delete","window","location","handlePost","post","handleUpdate","patch","AddMarkerToClick","markers","setMarkers","map","useMapEvents","click","e","newMarker","latlng","props","match","params","lat","lng"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { Icon, L } from \"leaflet\";\nimport Request from \"../helpers/request\";\nimport MarkerForm from \"../components/MarkerForm\";\nimport MarkerDetail from \"../components/MarkerDetail\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst photoIcon = new Icon({\n  iconUrl: '/camera.svg',\n  iconSize: [30, 30]\n});\n\nconst toiletIcon = new Icon({\n  iconUrl: '/toilet.svg',\n  iconSize: [30, 30]\n});\n\nconst attractionIcon = new Icon({\n  iconUrl: '/attraction.svg',\n  iconSize: [30, 30]\n});\n\nfunction Map() {\n\n  const [pins, setPins] = useState([]);\n\n  // const [state, setState] = useState(null);\n\n    useEffect(() => {\n        getAllData();\n    }, []);\n\n    const getAllData = () => {\n        \n      console.log(\"get all data\")\n\n        const request = new Request();\n        request.get('/api/pins')\n        .then((data) => {\n            setPins(data);\n        })\n    }\n\n    const getPinByID = (id) => {\n      return pins.find((pin) => {\n          return pin.id === parseInt(id);\n      });\n  }\n\n    const handleDelete = (id) =>  {\n      const request = new Request();\n        const url = \"/api/pins/\" + id\n        request.delete(url)\n          .then(() => window.location = \"/pins\")\n  }\n\n    const handlePost = (pin) => {\n        const request = new Request();\n        request.post(\"/api/pins\", pin)\n           .then(() => window.location = '/pins')\n      }\n\n    const handleUpdate = (pin) => {\n      const request = new Request();\n      request.patch('/api/pins/' + pin.id, pin).then(() => {\n          window.location = '/pins/' + pin.id\n      })\n    }\n\n  //   ('click', () => {\n  //     map.setCenter([50.5, 30.5])\n  //   })\n  //   return null\n  // }\n\n//   const map = useMapEvent('click', function(e) {        \n//     var popLocation= e.latlng;\n//     var popup = L.popup()\n//     .setLatLng(popLocation)\n//     .setContent('<p>Hello world!<br />This is a nice popup.</p>')\n//     .openOn(map);        \n// });\n\nfunction AddMarkerToClick() {\n\n  const [markers, setMarkers] = useState([]);\n\n  const map = useMapEvents({\n    click(e) {\n      const newMarker = e.latlng\n      setMarkers([...markers, newMarker]);\n    },\n  })\n\n\n  return (\n    <Router>\n    <>\n    <Switch>\n      <Route exact path = \"/pins/new\" render={() =>\n      {return <MarkerForm onCreate={handlePost}/>\n      }}/>\n\n      <Route exact path=\"/pins/:id/edit\" render={(props) =>{\n      const id = props.match.params.id;\n      const pin = getPinByID(id);\n      return <MarkerForm pin={pin}\n      onUpdate={handleUpdate}\n      />\n      }}/>\n\n      <Route exact path=\"/pins/:id\" render={(props) => {\n      const id = props.match.params.id;\n      const pin = getPinByID(id);\n      return <MarkerDetail pin={pin}\n      onDelete={handleDelete}\n      onUpdate={handleUpdate} \n      />\n      }} />\n\n    </Switch>\n\n  <MapContainer \n  center={[56.355233, -4.07513]} \n  zoom={8}\n\n  >\n\n  <TileLayer\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    \n  />\n\n\n  {pins.map((pin) => {\n          return <Marker key={pin.id} position={\n               [pin.lat, pin.lng]\n          }\n          icon={photoIcon}\n          \n\n          >\n            \n            <Popup>\n              \n               \n              <MarkerDetail pin={pin}\n              onDelete={handleDelete}\n              onUpdate={handleUpdate} \n              />\n            </Popup>\n          </Marker>\n        })}\n    </MapContainer >\n    </>\n    </Router>\n  )\n}\n} \nexport default Map;"]},"metadata":{},"sourceType":"module"}