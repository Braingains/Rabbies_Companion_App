{"ast":null,"code":"var _jsxFileName = \"/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/PinContainer.js\",\n    _s = $RefreshSig$();\n\n// import { getAllByAltText } from '@testing-library/dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PinList from \"../components/pins/PinList\";\nimport PinDetail from \"../components/pins/PinDetail\";\nimport React, { useState, useEffect } from 'react';\nimport Request from '../helpers/request';\nimport PinForm from \"../components/pins/PinForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PinContainer = () => {\n  _s();\n\n  const [pins, setPins] = useState([]);\n  useEffect(() => {\n    getAllData();\n  }, [pins]);\n\n  const getAllData = () => {\n    console.log(\"Loading...\");\n    const request = new Request();\n    const pinPromise = request.get('/pins');\n    Promise.all([pinPromise]).then(data => {\n      setPins(data[0]);\n    });\n  };\n\n  const findByCategoryType = categoryType => {\n    console.log(categoryType, pins);\n    return pins.find(pin => {\n      return pin.categoryType === categoryType;\n    });\n  };\n\n  const handleDelete = categoryType => {\n    const request = new Request();\n    const url = \"/pins/\" + categoryType;\n    request.delete(url).then(() => window.location = \"/pins\");\n  };\n\n  const handlePost = pin => {\n    const request = new Request();\n    request.post(\"/pins\", pin).then(() => window.location = '/pins');\n  }; // const handleUpdate = (pin) => {\n  //     const request = new Request();\n  //     request.patch('/pins/' + pin.id, pin).then(() => {\n  //         window.location = '/pins/' + pin.id\n  //     })\n  //   }\n\n\n  if (!{\n    pins\n  }) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/pins/new\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(PinForm, {\n              onCreate: handlePost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/pins/categoryType\",\n          render: props => {\n            const categoryType = props.match.params.categoryType;\n            const pin = findByCategoryType(categoryType);\n            return /*#__PURE__*/_jsxDEV(PinDetail, {\n              pin: pin,\n              onDelete: handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          render: pins => {\n            return /*#__PURE__*/_jsxDEV(PinList, {\n              pins: pins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 20\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PinContainer, \"lXbYceN8aKfWLs4tYW+R7vq54Lc=\");\n\n_c = PinContainer;\nexport default PinContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PinContainer\");","map":{"version":3,"sources":["/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/PinContainer.js"],"names":["BrowserRouter","Router","Route","Switch","PinList","PinDetail","React","useState","useEffect","Request","PinForm","PinContainer","pins","setPins","getAllData","console","log","request","pinPromise","get","Promise","all","then","data","findByCategoryType","categoryType","find","pin","handleDelete","url","delete","window","location","handlePost","post","props","match","params"],"mappings":"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","sourcesContent":["// import { getAllByAltText } from '@testing-library/dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PinList from \"../components/pins/PinList\";\nimport PinDetail from \"../components/pins/PinDetail\";\nimport React, { useState, useEffect } from 'react';\nimport Request from '../helpers/request';\nimport PinForm from \"../components/pins/PinForm\"\n\nconst PinContainer = () => {\n\n    const [pins, setPins] = useState([]);\n\n    useEffect(() => {\n        getAllData();\n    }, [pins]);\n\n    const getAllData = () => {\n        \n        console.log(\"Loading...\");\n\n        const request = new Request();\n        const pinPromise = request.get('/pins')\n\n        Promise.all([pinPromise])\n        .then((data) => {\n            setPins(data[0]);\n        })\n    }\n\n    const findByCategoryType = (categoryType) => {\n        console.log(categoryType, pins);\n        return pins.find((pin) => {\n            return pin.categoryType === categoryType;\n        });\n    }\n    \n    const handleDelete = (categoryType) =>  {\n        const request = new Request();\n          const url = \"/pins/\" + categoryType\n          request.delete(url)\n            .then(() => window.location = \"/pins\")\n    }\n    \n    const handlePost = (pin) => {\n        const request = new Request();\n        request.post(\"/pins\", pin)\n           .then(() => window.location = '/pins')\n      }\n    \n    // const handleUpdate = (pin) => {\n    //     const request = new Request();\n    //     request.patch('/pins/' + pin.id, pin).then(() => {\n    //         window.location = '/pins/' + pin.id\n    //     })\n    //   }\n\n    if (!{pins}) {\n        return null\n    }\n\n    return (\n        <Router>\n        <>\n        <Switch>\n            <Route exact path = \"/pins/new\" render={() =>\n            {return <PinForm onCreate={handlePost}/>\n            }}/>\n        \n            <Route exact path=\"/pins/categoryType\" render={(props) =>{\n                const categoryType = props.match.params.categoryType;\n                const pin = findByCategoryType(categoryType);\n                return <PinDetail pin={pin}\n                onDelete={handleDelete}\n                />\n            }}/>\n\n            <Route render={(pins) => {\n            return <PinList pins={pins}/>\n            }} />\n        </Switch>\n        </>\n        </Router>\n    )\n}\n\n\nexport default PinContainer;"]},"metadata":{},"sourceType":"module"}