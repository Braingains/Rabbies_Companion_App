{"ast":null,"code":"var _jsxFileName = \"/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/PinContainer.js\",\n    _s = $RefreshSig$();\n\n// import { getAllByAltText } from '@testing-library/dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PinList from \"../components/pins/PinList\";\nimport PinDetail from \"../components/pins/PinDetail\";\nimport React, { useState, useEffect } from 'react';\nimport Request from '../helpers/request';\nimport PinForm from \"../components/pins/PinForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PinContainer = () => {\n  _s();\n\n  const [pins, setPins] = useState([]);\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const getAllData = () => {\n    console.log(\"Loading...\");\n    const request = new Request();\n    request.get('/api/pins').then(data => {\n      setPins(data);\n    });\n  };\n\n  const getPinByID = id => {\n    return pins.find(pin => {\n      return pin.id === parseInt(id);\n    });\n  };\n\n  const findByCategoryType = categoryType => {\n    return pins.find(pin => {\n      return pin.categoryType === categoryType;\n    });\n  };\n\n  const handleDelete = id => {\n    const request = new Request();\n    const url = \"/api/pins/\" + id;\n    request.delete(url).then(() => window.location = \"/pins\");\n  };\n\n  const handlePost = pin => {\n    const request = new Request();\n    request.post(\"/api/pins\", pin).then(() => window.location = '/pins');\n  };\n\n  const handleUpdate = pin => {\n    const request = new Request();\n    request.patch('/api/pins/' + pin.id, pin).then(() => {\n      window.location = '/pins/' + pin.id;\n    });\n  };\n\n  if (!{\n    pins\n  }) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/pins/new\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(PinForm, {\n              onCreate: handlePost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/pins/:id\",\n          render: props => {\n            const id = props.match.params.categoryType;\n            const pin = getPinByID(id);\n            return /*#__PURE__*/_jsxDEV(PinDetail, {\n              pin: pin,\n              onDelete: handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/pins/:id/edit\",\n          render: props => {\n            const id = props.match.params.id;\n            const pin = getPinByID(id);\n            return /*#__PURE__*/_jsxDEV(PinDetail, {\n              pin: pin // onDelete={handleDelete}\n              // onUpdate={handleUpdate} \n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(PinList, {\n              pins: pins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 20\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PinContainer, \"lXbYceN8aKfWLs4tYW+R7vq54Lc=\");\n\n_c = PinContainer;\nexport default PinContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PinContainer\");","map":{"version":3,"sources":["/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/containers/PinContainer.js"],"names":["BrowserRouter","Router","Route","Switch","PinList","PinDetail","React","useState","useEffect","Request","PinForm","PinContainer","pins","setPins","getAllData","console","log","request","get","then","data","getPinByID","id","find","pin","parseInt","findByCategoryType","categoryType","handleDelete","url","delete","window","location","handlePost","post","handleUpdate","patch","props","match","params"],"mappings":"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","sourcesContent":["// import { getAllByAltText } from '@testing-library/dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PinList from \"../components/pins/PinList\";\nimport PinDetail from \"../components/pins/PinDetail\";\nimport React, { useState, useEffect } from 'react';\nimport Request from '../helpers/request';\nimport PinForm from \"../components/pins/PinForm\"\n\nconst PinContainer = () => {\n\n    const [pins, setPins] = useState([]);\n\n    useEffect(() => {\n        getAllData();\n    }, []);\n\n    const getAllData = () => {\n        \n        console.log(\"Loading...\");\n\n        const request = new Request();\n        request.get('/api/pins')\n        .then((data) => {\n            setPins(data);\n        })\n    }\n\n    const getPinByID = (id) => {\n        return pins.find((pin) => {\n            return pin.id === parseInt(id);\n        });\n    }\n\n    const findByCategoryType = (categoryType) => {\n        return pins.find((pin) => {\n            return pin.categoryType === categoryType;\n        });\n    }\n    \n    const handleDelete = (id) =>  {\n        const request = new Request();\n          const url = \"/api/pins/\" + id\n          request.delete(url)\n            .then(() => window.location = \"/pins\")\n    }\n    \n    const handlePost = (pin) => {\n        const request = new Request();\n        request.post(\"/api/pins\", pin)\n           .then(() => window.location = '/pins')\n      }\n    \n    const handleUpdate = (pin) => {\n        const request = new Request();\n        request.patch('/api/pins/' + pin.id, pin).then(() => {\n            window.location = '/pins/' + pin.id\n        })\n      }\n\n    if (!{pins}) {\n        return null\n    }\n    return (\n        <Router>\n        <>\n        <Switch>\n            <Route exact path = \"/pins/new\" render={() =>\n            {return <PinForm onCreate={handlePost}/>\n            }}/>\n        \n            <Route exact path=\"/pins/:id\" render={(props) =>{\n                const id = props.match.params.categoryType;\n                const pin = getPinByID(id);\n                return <PinDetail pin={pin}\n                onDelete={handleDelete}\n                />\n            }}/>\n\n            <Route exact path=\"/pins/:id/edit\" render={(props) => {\n                const id = props.match.params.id;\n                const pin = getPinByID(id);\n                return <PinDetail pin={pin}\n                // onDelete={handleDelete}\n                // onUpdate={handleUpdate} \n                />\n            }} />\n\n            \n\n            <Route render={() => {\n            return <PinList pins={pins}/>\n            }} />\n        </Switch>\n        </>\n        </Router>\n    )\n}\n\n\nexport default PinContainer;"]},"metadata":{},"sourceType":"module"}