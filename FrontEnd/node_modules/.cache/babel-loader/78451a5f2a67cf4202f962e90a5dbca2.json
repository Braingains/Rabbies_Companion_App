{"ast":null,"code":"var _jsxFileName = \"/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n}; //centers on Edinburgh by default\n\nconst center = {\n  lat: 55.9533,\n  lng: -3.1883\n}; // const initialPins = \n\nconst options = {\n  // styles:  \n  //custom map designs at snazzymaps - save in mapStyles.js\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst Map = ({\n  center,\n  zoom\n}) => {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY\n  });\n  const [markers, setMarkers] = React.useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 8,\n      center: center,\n      children: markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        /* maps markers using the Marker import from the library, using time of click as key */\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        } // icon={{ }}\n\n      }, marker.time.toISOString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"qDfa7bHWBewxRKCGh5N6p06sXA0=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/user/project_3/Rabbies_Companion_App/FrontEnd/src/components/Map.js"],"names":["GoogleMap","useLoadScript","Marker","InfoWindow","mapContainerStyle","width","height","center","lat","lng","options","disableDefaultUI","zoomControl","Map","zoom","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_API_KEY","markers","setMarkers","React","useState","map","marker","time","toISOString"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,aAAnB,EAAkCC,MAAlC,EAA0CC,UAA1C,QAA4D,wBAA5D;;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,OADe;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAA1B,C,CAKE;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,OADQ;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf,C,CAKA;;AAEA,MAAMC,OAAO,GAAG;AACd;AACA;AACAC,EAAAA,gBAAgB,EAAE,IAHJ;AAIdC,EAAAA,WAAW,EAAE;AAJC,CAAhB;;AAOF,MAAMC,GAAG,GAAG,CAAC;AAACN,EAAAA,MAAD;AAASO,EAAAA;AAAT,CAAD,KAAoB;AAAA;;AAC5B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAwBf,aAAa,CAAC;AACxCgB,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADU,GAAD,CAA3C;AAGE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACF,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,SAAD;AACI,MAAA,iBAAiB,EAAEpB,iBADvB;AAEI,MAAA,IAAI,EAAE,CAFV;AAGI,MAAA,MAAM,EAAEG,MAHZ;AAAA,gBAKKc,OAAO,CAACI,GAAR,CAAaC,MAAD,iBACnB,QAAC,MAAD;AAEA;AACA,QAAA,QAAQ,EAAE;AAAClB,UAAAA,GAAG,EAAEkB,MAAM,CAAClB,GAAb;AAAkBC,UAAAA,GAAG,EAAEiB,MAAM,CAACjB;AAA9B,SAHV,CAIA;;AAJA,SACKiB,MAAM,CAACC,IAAP,CAAYC,WAAZ,EADL;AAAA;AAAA;AAAA;AAAA,cADO;AALL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAvBD;;GAAMf,G;UAC4BZ,a;;;KAD5BY,G;AAyBN,eAAeA,GAAf","sourcesContent":["import {GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\n\nconst mapContainerStyle = {\n    width: '100vw',\n    height: '100vh',\n  };\n  \n  //centers on Edinburgh by default\n  const center = {\n    lat: 55.9533,\n    lng: -3.1883\n  }\n  \n  // const initialPins = \n  \n  const options = {\n    // styles:  \n    //custom map designs at snazzymaps - save in mapStyles.js\n    disableDefaultUI: true,\n    zoomControl: true,\n  } \n\nconst Map = ({center, zoom}) => {\n    const {isLoaded, loadError} = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_API_KEY\n      });\n      const [markers, setMarkers] = React.useState([]);\n    return(\n        <div className=\"map\">\n            <GoogleMap\n                mapContainerStyle={mapContainerStyle}\n                zoom={8} \n                center={center}\n            >\n                {markers.map((marker) => (\n          <Marker \n          key={marker.time.toISOString()}\n          /* maps markers using the Marker import from the library, using time of click as key */\n          position={{lat: marker.lat, lng: marker.lng}} \n          // icon={{ }}\n          \n          />))}\n            </GoogleMap>\n        </div>\n    )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}